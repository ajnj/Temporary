<?php

/**
 * @file
 * THIS SPACE INTENTIONALLY LEFT BLANK.
 *
 * Yes, there is no code in the .module file. Migrate operates almost entirely
 * through classes, and by adding any files containing class definitions to the
 * .info file, those files are automatically included only when the classes they
 * contain are referenced. The one non-class piece you need to implement is
 * hook_migrate_api(), but because .migrate.inc is registered using hook_hook_info
 * by defining your implementation of that hook in mymodule.migrate.inc, it is
 * automatically invoked only when needed.
 */

require_once('migrate_helios_functions.inc');

/**
 * Implements hook_form_FORM_ID_alter().
 */
function migrate_helios_form_field_ui_field_edit_form_alter(&$form, &$form_state) {
  $form['#submit'][] = 'migrate_helios_field_ui_field_edit_form_submit';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function migrate_helios_form_migrate_ui_migrate_group_alter(&$form, &$form_state) {
  $form['dashboard']['migrations']['#header']['helios_duplicates'] = 'Duplicates';
  $form['dashboard']['migrations']['#header']['helios_formatting'] = 'Formatting (24 fields)';
  $form['dashboard']['migrations']['#header']['helios_source_file'] = 'Source file';


  $options = &$form['dashboard']['migrations']['#options'];

  foreach ($options as $type => &$option) {
    $option['helios_duplicates'] = migrate_helios_find_duplicates($type);
    $option['helios_formatting'] = migrate_helios_find_formatting_issues($type);
    $option['helios_source_file'] = migrate_helios_get_source_file($type);
  }


}

/**
 * Submit callback.
 */
function migrate_helios_field_ui_field_edit_form_submit(&$form, &$form_state) {
  migrate_static_registration();
  drupal_set_message('Migrations have been refreshed.');
}

/**
 * Helper.
 */
function migrate_helios_decorated_str_getcsv($input) {
  return str_getcsv($input, ';');
}

/**
 * @param string $type
 *
 * @return string
 */
function migrate_helios_find_duplicates($type) {
  $filename = migrate_helios_get_source_path($type);

  if (!file_exists($filename)) {
    return '?';
  }

  $array = &drupal_static("migrate_helios_migration_cache_$type");

  if (empty($array)) {
    $array = array_map('migrate_helios_decorated_str_getcsv', file($filename));
  }

  $duplicates = 0;
  $ids = array();
  $line = 1;
  foreach ($array as $key => $item) {
    $type = $item[0];
    $id = $item[1];
    $combinedId = $type . ' - ' . $id;
    $combinedIdLower = strtolower($combinedId);
    if (!isset($ids[$combinedIdLower])) {
      $ids[$combinedIdLower] = array('line' => $line, 'upper' => ($combinedId !== $combinedIdLower) ? $combinedId : NULL);
    } else {
      $duplicates++;
    }
    $line++;
  }

  $color = $duplicates === 0 ? 'black' : 'red';

  return "<span style='color: $color;'>$duplicates</span>";
}
/**
 * @param string $type
 *
 * @return string
 */
function migrate_helios_find_formatting_issues($type) {

  $filename = migrate_helios_get_source_path($type);
  if (!file_exists($filename)) {
    return '?';
  }

  $array = &drupal_static("migrate_helios_migration_cache_$type");

  if (empty($array)) {
    $array = array_map('migrate_helios_decorated_str_getcsv', file($filename));
  }

  $fields = 24;

  foreach ($array as $key => $item) {
    if (count($item) !== $fields) {
      $line = $key+1;
      return "<span style='color: red;'>✕ (problem begins at line $line)</span>";
    }
  }

  return '✓';
}


function migrate_helios_get_source_file($type) {
  $filename = migrate_helios_get_source_path($type);
  if (!file_exists($filename)) {
    return "<span style='color: red;'>$type.txt (Not found)</span>";
  }

  return "$type.txt";
}

function migrate_helios_get_source_path($type) {
  return "sites/all/migration_sources/$type.txt";
}
